plugins {
    id 'java'
    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
    id 'org.springframework.boot' version '2.6.1'
    id 'pl.allegro.tech.build.axion-release' version '1.13.6'
    id 'com.palantir.docker' version '0.31.0'
    id 'com.palantir.docker-run' version '0.31.0'
}

group = 'com.tomgregory'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.5'

    implementation 'org.hibernate:hibernate-core:5.6.9.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.7.Final'
    implementation 'org.hibernate.common:hibernate-commons-annotations:5.1.2.Final'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

String imageName = "${project.group}/${project.name}"
docker {
    dockerfile file('Dockerfile')
    name imageName
    tags 'latest'
    dependsOn build
    files bootJar.archiveFile.get()
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}
dockerRun {
    name "${project.name}-container"
    image imageName
    ports '8085:8080'
    env 'SPRING_PROFILES_ACTIVE': 'dev'
    daemonize true
    clean false
}